// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Monitor.Query.Models
{
    public partial class BatchMetric
    {
        internal static BatchMetric DeserializeBatchMetric(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string id = default;
            LocalizableStringAutoGenerated name = default;
            string displayDescription = default;
            string type = default;
            BatchMetricUnit unit = default;
            IReadOnlyList<BatchTimeSeriesElement> timeseries = default;
            Optional<string> errorCode = default;
            Optional<string> errorMessage = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = LocalizableStringAutoGenerated.DeserializeLocalizableStringAutoGenerated(property.Value);
                    continue;
                }
                if (property.NameEquals("displayDescription"u8))
                {
                    displayDescription = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("unit"u8))
                {
                    unit = property.Value.GetString().ToBatchMetricUnit();
                    continue;
                }
                if (property.NameEquals("timeseries"u8))
                {
                    List<BatchTimeSeriesElement> array = new List<BatchTimeSeriesElement>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(BatchTimeSeriesElement.DeserializeBatchTimeSeriesElement(item));
                    }
                    timeseries = array;
                    continue;
                }
                if (property.NameEquals("errorCode"u8))
                {
                    errorCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("errorMessage"u8))
                {
                    errorMessage = property.Value.GetString();
                    continue;
                }
            }
            return new BatchMetric(id, name, displayDescription, type, unit, timeseries, errorCode.Value, errorMessage.Value);
        }
    }
}
